{"ast":null,"code":"var _jsxFileName = \"/home/nikolay/elbrus/react/soloreact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import Navbar from \"./components/Navbar\";\n\nimport MovieItem from \"./components/MovieItem\";\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(''); //   useEffect(() => {\n  //   fetch(MOVIE_API_URL)\n  //     .then(response => response.json())\n  //     .then(jsonResponse => {\n  //       console.log(jsonResponse);\n  //       setMovies(jsonResponse.Search);\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n  function search(searchValue) {\n    setLoading(true);\n    setErrorMessage('');\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(response => response.json()).then(body => {\n      console.log(body);\n\n      if (body.Response === \"True\") {\n        setMovies(body.Search);\n        setLoading(false);\n      } else {\n        setErrorMessage(body.Error);\n        setLoading(false);\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading && !errorMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this) : errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : movies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GWb2QsTIjIVqCZsCZcL+v1MVITA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieItem","Search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","search","searchValue","fetch","then","response","json","body","console","log","Response","Error","map","movie","index"],"sources":["/home/nikolay/elbrus/react/soloreact/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n// import Navbar from \"./components/Navbar\";\nimport MovieItem from \"./components/MovieItem\";\nimport Search from \"./components/Search\";\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  //   useEffect(() => {\n  //   fetch(MOVIE_API_URL)\n  //     .then(response => response.json())\n  //     .then(jsonResponse => {\n  //       console.log(jsonResponse);\n  //       setMovies(jsonResponse.Search);\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n  function search (searchValue) {\n    setLoading(true);\n    setErrorMessage('');\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(body => {\n        console.log(body);\n        if (body.Response === \"True\") {\n          setMovies(body.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(body.Error);\n          setLoading(false);\n        }\n      });\n  \t};\n  return (\n    <div className=\"App\">\n      <Search search={search} />\n      {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <MovieItem key={index} movie={movie} />\n          ))\n        )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD,CAHa,CAKb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASW,MAAT,CAAiBC,WAAjB,EAA8B;IAC5BN,UAAU,CAAC,IAAD,CAAV;IACAI,eAAe,CAAC,EAAD,CAAf;IAEAG,KAAK,CAAE,8BAA6BD,WAAY,kBAA3C,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;MACA,IAAIA,IAAI,CAACG,QAAL,KAAkB,MAAtB,EAA8B;QAC5BZ,SAAS,CAACS,IAAI,CAACd,MAAN,CAAT;QACAG,UAAU,CAAC,KAAD,CAAV;MACD,CAHD,MAGO;QACLI,eAAe,CAACO,IAAI,CAACI,KAAN,CAAf;QACAf,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAXH;EAYA;;EAAA;EACF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,MAAM,EAAEK;IAAhB;MAAA;MAAA;MAAA;IAAA,QADF,EAEGN,OAAO,IAAI,CAACI,YAAZ,gBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,GAEMA,YAAY,gBACf;MAAK,SAAS,EAAC,cAAf;MAAA,UAA+BA;IAA/B;MAAA;MAAA;MAAA;IAAA,QADe,GAGfF,MAAM,CAACe,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,SAAD;MAAuB,KAAK,EAAED;IAA9B,GAAgBC,KAAhB;MAAA;MAAA;MAAA;IAAA,QADF,CAPN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA9CQpB,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}