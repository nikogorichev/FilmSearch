{"ast":null,"code":"var _jsxFileName = \"/home/nikolay/elbrus/react/soloreact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport MovieItem from \"./components/MovieItem\";\nimport Search from \"./components/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(''); //   useEffect(() => {\n  //   fetch(MOVIE_API_URL)\n  //     .then(response => response.json())\n  //     .then(jsonResponse => {\n  //       console.log(jsonResponse);\n  //       setMovies(jsonResponse.Search);\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n  function search(searchValue) {\n    setLoading(true);\n    setErrorMessage('');\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(response => response.json()).then(body => {\n      if (body.Response === \"True\") {\n        setMovies(body.Search);\n        setLoading(false);\n      } else {\n        setErrorMessage(body.Error);\n        setLoading(false);\n      }\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), \" \", loading && !errorMessage ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 36\n    }, this) : errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: [\" \", errorMessage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }, this) : movies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, `${index}-${movie.Title}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 40\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"GWb2QsTIjIVqCZsCZcL+v1MVITA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","MovieItem","Search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","search","searchValue","fetch","then","response","json","body","Response","Error","map","movie","index","Title"],"sources":["/home/nikolay/elbrus/react/soloreact/src/App.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect\n} from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport MovieItem from \"./components/MovieItem\";\nimport Search from \"./components/Search\";\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  //   useEffect(() => {\n  //   fetch(MOVIE_API_URL)\n  //     .then(response => response.json())\n  //     .then(jsonResponse => {\n  //       console.log(jsonResponse);\n  //       setMovies(jsonResponse.Search);\n  //       setLoading(false);\n  //     });\n  // }, []);\n\n  function search(searchValue) {\n    setLoading(true);\n    setErrorMessage('');\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(body => {\n        if (body.Response === \"True\") {\n          setMovies(body.Search);\n          setLoading(false);\n        } else {\n          setErrorMessage(body.Error);\n          setLoading(false);\n        }\n      });\n  };\n  return ( <\n    div className = \"App\" >\n    <\n    Navbar / >\n    <\n    Search search = {\n      search\n    }\n    /> {\n      loading && !errorMessage ? ( <\n        span > loading... < /span>\n      ) : errorMessage ? ( <\n        div className = \"errorMessage\" > {\n          errorMessage\n        } < /div>\n      ) : (\n        movies.map((movie, index) => ( <\n          MovieItem key = {\n            `${index}-${movie.Title}`\n          }\n          movie = {\n            movie\n          }\n          />\n        ))\n      )\n    } <\n    /div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,QAGO,OAHP;AAIA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD,CAHa,CAKb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASY,MAAT,CAAgBC,WAAhB,EAA6B;IAC3BN,UAAU,CAAC,IAAD,CAAV;IACAI,eAAe,CAAC,EAAD,CAAf;IAEAG,KAAK,CAAE,8BAA6BD,WAAY,kBAA3C,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,QAAL,KAAkB,MAAtB,EAA8B;QAC5BV,SAAS,CAACS,IAAI,CAACd,MAAN,CAAT;QACAG,UAAU,CAAC,KAAD,CAAV;MACD,CAHD,MAGO;QACLI,eAAe,CAACO,IAAI,CAACE,KAAN,CAAf;QACAb,UAAU,CAAC,KAAD,CAAV;MACD;IACF,CAVH;EAWD;;EAAA;EACD,oBAAS;IACH,SAAS,EAAG,KADT;IAAA,wBAEP,QACA,MADA;MAAA;MAAA;MAAA;IAAA,QAFO,eAIP,QACA,MADA;MACO,MAAM,EACXK;IAFF;MAAA;MAAA;MAAA;IAAA,QAJO,OASLN,OAAO,IAAI,CAACI,YAAZ,gBAA6B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA7B,GAEIA,YAAY,gBAAK;MACf,SAAS,EAAG,cADG;MAAA,gBAEjBA,YAFiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAL,GAKdF,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAAoB,QAC7B,SAD6B;MAI7B,KAAK,EACHD;IAL2B,GAE1B,GAAEC,KAAM,IAAGD,KAAK,CAACE,KAAM,EAFG;MAAA;MAAA;MAAA;IAAA,QAA/B,CAhBG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAT;AA6BD;;GA5DQnB,G;;KAAAA,G;AA8DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}